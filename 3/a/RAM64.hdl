// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];
    PARTS:
    // Use DMux8Way to select which RAM8 to load
    DMux8Way(in=load, sel=address[3..5], a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);

    // Eight RAM8 chips
    RAM8(in=in, load=load0, address=address[0..2], out=out0);
    RAM8(in=in, load=load1, address=address[0..2], out=out1);
    RAM8(in=in, load=load2, address=address[0..2], out=out2);
    RAM8(in=in, load=load3, address=address[0..2], out=out3);
    RAM8(in=in, load=load4, address=address[0..2], out=out4);
    RAM8(in=in, load=load5, address=address[0..2], out=out5);
    RAM8(in=in, load=load6, address=address[0..2], out=out6);
    RAM8(in=in, load=load7, address=address[0..2], out=out7);

    // Use two Mux4Way16 chips to select the output from the appropriate RAM8
    Mux4Way16(a=out0, b=out1, c=out2, d=out3, sel=address[3..4], out=muxout1);
    Mux4Way16(a=out4, b=out5, c=out6, d=out7, sel=address[3..4], out=muxout2);

    // Use final Mux16 to select between the two Mux4Way16 outputs
    Mux16(a=muxout1, b=muxout2, sel=address[5], out=out);
}