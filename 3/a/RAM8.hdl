// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Distribute the load signal to the appropriate register
    DMux8Way(in=load, sel=address, a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);

    // Eight 16-bit registers
    Register(in=in, load=load0, out=out0);
    Register(in=in, load=load1, out=out1);
    Register(in=in, load=load2, out=out2);
    Register(in=in, load=load3, out=out3);
    Register(in=in, load=load4, out=out4);
    Register(in=in, load=load5, out=out5);
    Register(in=in, load=load6, out=out6);
    Register(in=in, load=load7, out=out7);

    // Select the output from the appropriate register using Mux16 chips
    Mux16(a=out0, b=out1, sel=address[0], out=mux01);
    Mux16(a=out2, b=out3, sel=address[0], out=mux23);
    Mux16(a=out4, b=out5, sel=address[0], out=mux45);
    Mux16(a=out6, b=out7, sel=address[0], out=mux67);

    Mux16(a=mux01, b=mux23, sel=address[1], out=mux0123);
    Mux16(a=mux45, b=mux67, sel=address[1], out=mux4567);

    Mux16(a=mux0123, b=mux4567, sel=address[2], out=out);
}
